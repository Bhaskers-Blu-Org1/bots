{
	"name": "let's speak cockney!",
	"created": "2018-01-30T06:25:18.389Z",
	"intents": [{
		"intent": "explain",
		"created": "2018-01-31T06:10:30.351Z",
		"updated": "2018-01-31T06:10:30.351Z",
		"examples": [{
			"text": "why",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "explanation",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "explain",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}],
		"description": ""
	}, {
		"intent": "greetings",
		"created": "2018-01-31T06:10:30.351Z",
		"updated": "2018-01-31T06:10:30.351Z",
		"examples": [{
			"text": "hi there",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "afternoon",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "mornin",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "morning",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "hi",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "hello",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}],
		"description": ""
	}, {
		"intent": "goodbye",
		"created": "2018-01-31T06:10:30.351Z",
		"updated": "2018-01-31T06:10:30.351Z",
		"examples": [{
			"text": "cherrio",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "tara",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "goodbye",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}, {
			"text": "bye",
			"created": "2018-01-31T06:10:30.351Z",
			"updated": "2018-01-31T06:10:30.351Z"
		}],
		"description": ""
	}, {
		"intent": "translate",
		"created": "2018-01-31T06:10:30.351Z",
		"updated": "2018-01-31T06:10:30.351Z",
		"examples": [],
		"description": ""
	}],
	"updated": "2018-01-31T21:34:04.934Z",
	"entities": [{
		"entity": "eyes",
		"values": [{
			"type": "synonyms",
			"value": "eyes",
			"created": "2018-01-31T06:26:45.527Z",
			"updated": "2018-01-31T06:26:45.527Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:26:41.454Z",
		"updated": "2018-01-31T06:26:45.527Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "lies",
		"values": [{
			"type": "synonyms",
			"value": "lies",
			"created": "2018-01-30T23:52:18.812Z",
			"updated": "2018-01-30T23:52:18.812Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-30T23:52:13.941Z",
		"updated": "2018-01-30T23:52:18.812Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "drink",
		"values": [{
			"type": "synonyms",
			"value": "drink",
			"created": "2018-01-31T06:22:49.212Z",
			"updated": "2018-01-31T06:22:49.212Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:22:41.161Z",
		"updated": "2018-01-31T06:22:49.212Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "drunk",
		"values": [{
			"type": "synonyms",
			"value": "drunk",
			"created": "2018-01-31T06:19:08.331Z",
			"updated": "2018-01-31T06:19:08.331Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:19:04.581Z",
		"updated": "2018-01-31T06:19:08.331Z",
		"metadata": null,
		"description": null,
		"fuzzy_match": false
	}, {
		"entity": "cash",
		"values": [{
			"type": "synonyms",
			"value": "cash",
			"created": "2018-01-31T00:56:44.959Z",
			"updated": "2018-01-31T00:56:44.959Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T00:56:41.719Z",
		"updated": "2018-01-31T00:56:44.959Z",
		"metadata": null,
		"description": null,
		"fuzzy_match": false
	}, {
		"entity": "explanation",
		"values": [],
		"created": "2018-01-30T23:43:20.549Z",
		"updated": "2018-01-30T23:43:20.549Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "skint",
		"values": [{
			"type": "synonyms",
			"value": "skint",
			"created": "2018-01-31T07:15:33.589Z",
			"updated": "2018-01-31T07:15:33.589Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T07:15:27.996Z",
		"updated": "2018-01-31T07:15:33.589Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "rain",
		"values": [{
			"type": "synonyms",
			"value": "rain",
			"created": "2018-01-31T07:13:00.343Z",
			"updated": "2018-01-31T07:13:00.343Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T07:12:56.184Z",
		"updated": "2018-01-31T07:13:00.343Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "cough",
		"values": [{
			"type": "synonyms",
			"value": "cough",
			"created": "2018-01-31T01:09:30.052Z",
			"updated": "2018-01-31T01:09:30.052Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T01:09:26.196Z",
		"updated": "2018-01-31T01:09:30.052Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "knackered",
		"values": [{
			"type": "synonyms",
			"value": "knackered",
			"created": "2018-01-31T06:43:54.608Z",
			"updated": "2018-01-31T06:43:54.608Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:43:50.251Z",
		"updated": "2018-01-31T06:43:54.608Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "heart",
		"values": [{
			"type": "synonyms",
			"value": "heart",
			"created": "2018-01-31T06:38:18.343Z",
			"updated": "2018-01-31T06:38:18.343Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:38:14.355Z",
		"updated": "2018-01-31T06:38:18.343Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "tonic",
		"values": [{
			"type": "synonyms",
			"value": "tonic",
			"created": "2018-01-31T07:10:42.778Z",
			"updated": "2018-01-31T07:10:42.778Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T07:10:35.986Z",
		"updated": "2018-01-31T07:10:42.778Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "head",
		"values": [{
			"type": "synonyms",
			"value": "head",
			"created": "2018-01-31T06:14:31.641Z",
			"updated": "2018-01-31T06:17:27.912Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:14:27.224Z",
		"updated": "2018-01-31T06:17:27.912Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "cheque",
		"values": [{
			"type": "synonyms",
			"value": "cheque",
			"created": "2018-01-31T00:56:21.839Z",
			"updated": "2018-01-31T00:56:21.839Z",
			"metadata": null,
			"synonyms": ["check"]
		}],
		"created": "2018-01-31T00:56:12.478Z",
		"updated": "2018-01-31T00:56:21.839Z",
		"metadata": null,
		"description": null,
		"fuzzy_match": false
	}, {
		"entity": "socks",
		"values": [{
			"type": "synonyms",
			"value": "socks",
			"created": "2018-01-31T07:17:19.284Z",
			"updated": "2018-01-31T07:17:19.284Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T07:17:12.702Z",
		"updated": "2018-01-31T07:17:19.284Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "engineer",
		"values": [{
			"type": "synonyms",
			"value": "engineer",
			"created": "2018-01-31T06:24:58.255Z",
			"updated": "2018-01-31T06:24:58.255Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:24:53.592Z",
		"updated": "2018-01-31T06:24:58.255Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "jeans",
		"values": [{
			"type": "synonyms",
			"value": "jeans",
			"created": "2018-01-31T06:39:04.378Z",
			"updated": "2018-01-31T06:39:04.378Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:38:57.855Z",
		"updated": "2018-01-31T06:39:04.378Z",
		"metadata": null,
		"description": null,
		"fuzzy_match": false
	}, {
		"entity": "wife",
		"values": [{
			"type": "synonyms",
			"value": "wife",
			"created": "2018-01-31T00:55:53.929Z",
			"updated": "2018-01-31T00:55:53.929Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T00:55:50.367Z",
		"updated": "2018-01-31T00:55:53.929Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "stairs",
		"values": [{
			"type": "synonyms",
			"value": "stairs",
			"created": "2018-01-30T23:36:23.116Z",
			"updated": "2018-01-30T23:36:23.116Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-30T23:36:23.116Z",
		"updated": "2018-01-30T23:36:23.116Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "feet",
		"values": [{
			"type": "synonyms",
			"value": "feet",
			"created": "2018-01-31T06:30:21.480Z",
			"updated": "2018-01-31T06:30:21.480Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:30:18.131Z",
		"updated": "2018-01-31T06:30:21.480Z",
		"metadata": null,
		"description": null,
		"fuzzy_match": false
	}, {
		"entity": "face",
		"values": [{
			"type": "synonyms",
			"value": "face",
			"created": "2018-01-31T06:29:07.413Z",
			"updated": "2018-01-31T06:29:07.413Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:29:02.673Z",
		"updated": "2018-01-31T06:29:07.413Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "favour",
		"values": [{
			"type": "synonyms",
			"value": "favour",
			"created": "2018-01-31T06:30:10.140Z",
			"updated": "2018-01-31T06:30:10.140Z",
			"metadata": null,
			"synonyms": ["favor"]
		}],
		"created": "2018-01-31T06:30:02.308Z",
		"updated": "2018-01-31T06:30:10.140Z",
		"metadata": null,
		"description": null,
		"fuzzy_match": false
	}, {
		"entity": "gin",
		"values": [{
			"type": "synonyms",
			"value": "gin",
			"created": "2018-01-31T06:36:18.149Z",
			"updated": "2018-01-31T06:36:18.149Z",
			"metadata": null,
			"synonyms": []
		}],
		"created": "2018-01-31T06:36:14.740Z",
		"updated": "2018-01-31T06:36:18.149Z",
		"metadata": null,
		"description": null
	}, {
		"entity": "telephone",
		"values": [{
			"type": "synonyms",
			"value": "telephone",
			"created": "2018-01-30T23:36:23.116Z",
			"updated": "2018-01-30T23:36:23.116Z",
			"metadata": null,
			"synonyms": ["phone"]
		}],
		"created": "2018-01-30T23:36:23.116Z",
		"updated": "2018-01-30T23:36:23.116Z",
		"metadata": null,
		"description": null
	}],
	"language": "en",
	"metadata": {
		"api_version": {
			"major_version": "v1",
			"minor_version": "2017-05-26"
		}
	},
	"description": "Lean how to use cockney rhyming slang to describe everyday things!",
	"dialog_nodes": [{
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@feet.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @feet.location[0]) ?>",
			"explanation": "plates refers to Plates of Meat, meet rhymes with feet",
			"translation": "plates"
		},
		"created": "2018-01-31T06:33:11.092Z",
		"updated": "2018-01-31T21:33:32.777Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@feet",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_25_1517380390847",
		"previous_sibling": "node_24_1517380312271"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@cough.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @cough.location[0]) ?>",
			"explanation": "boris refers to Boris Karloff, karloff rhymes with cough",
			"translation": "boris"
		},
		"created": "2018-01-31T01:09:39.353Z",
		"updated": "2018-01-31T21:32:55.558Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@cough",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_13_1517360979166",
		"previous_sibling": "node_12_1517360772701"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@eyes.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @eyes.location[0]) ?>",
			"explanation": "mincies refers to Mince Pies, pies rhymes with eyes",
			"translation": "mincies"
		},
		"created": "2018-01-31T06:27:05.608Z",
		"updated": "2018-01-31T21:33:19.313Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@eyes",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_21_1517380025420",
		"previous_sibling": "node_20_1517379906855"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@favour.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @favour.location[0]) ?>",
			"explanation": "cheesy refers to Cheesy Quaver (it's a snack), quaver rhymes with favour/favor",
			"translation": "cheesy"
		},
		"created": "2018-01-31T06:31:52.495Z",
		"updated": "2018-01-31T21:33:28.530Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@favour",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_24_1517380312271",
		"previous_sibling": "node_23_1517380255100"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@drink.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @drink.location[0]) ?>",
			"explanation": "tiddley refers to Tiddley Winks (its a game), winks rhymes with drinks",
			"translation": "tiddley"
		},
		"created": "2018-01-31T06:22:57.913Z",
		"updated": "2018-01-31T21:33:10.674Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@drink",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_19_1517379777711",
		"previous_sibling": "node_18_1517379560424"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@cheque.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @cheque.location[0]) ?>",
			"explanation": "gregory refers to Gregory Peck, peck rhymes with cheque/check",
			"translation": "gregory"
		},
		"created": "2018-01-31T00:59:42.134Z",
		"updated": "2018-01-31T21:32:42.667Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@cheque",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_10_1517360381338",
		"previous_sibling": "node_9_1517360219036"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@cash.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @cash.location[0]) ?>",
			"explanation": "sausage refers to Sausage & Mash, mash rhymes with cash",
			"translation": "sausage"
		},
		"created": "2018-01-31T01:06:12.873Z",
		"updated": "2018-01-31T21:32:47.796Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@cash",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_12_1517360772701",
		"previous_sibling": "node_10_1517360381338"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@knackered.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @knackered.location[0]) ?>",
			"explanation": "Cream Crackered rhymes with knackered",
			"translation": "cream crackered"
		},
		"created": "2018-01-31T06:44:15.585Z",
		"updated": "2018-01-31T21:33:48.414Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@knackered",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_31_1517381055362",
		"previous_sibling": "node_29_1517380853909"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@drunk.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @drunk.location[0]) ?>",
			"explanation": "elephant refers to Elephant's Trunk, trunk rhymes with drunk",
			"translation": "elephant's"
		},
		"created": "2018-01-31T06:19:20.664Z",
		"updated": "2018-01-31T21:33:04.004Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@drunk",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_18_1517379560424",
		"previous_sibling": "node_17_1517379306855"
	}, {
		"type": "standard",
		"title": "Anything else",
		"output": {
			"text": {
				"values": ["Sorry, I'm still learning this crazy language - I didn't recognise any words I know in Cockney Rhyming Slang in that phrase. Try a phrase that uses any of the following words: stairs, phone, check(as in banking), wife, cough, cash, lies, head, drink, drunk, engineer, eyes, face, favour/favor, feet, gin, heart, jeans, knackered, tonic, rain, skint, socks"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": null,
		"created": "2018-01-30T06:40:22.899Z",
		"updated": "2018-01-31T07:18:46.629Z",
		"metadata": {},
		"next_step": null,
		"conditions": "anything_else",
		"description": null,
		"dialog_node": "Anything else",
		"previous_sibling": "node_4_1517355785933"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@gin.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @gin.location[0]) ?>",
			"explanation": "vera refers to Vera Lynn (singer), lynn rhymes with gin",
			"translation": "vera"
		},
		"created": "2018-01-31T06:36:28.893Z",
		"updated": "2018-01-31T21:33:36.243Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@gin",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_27_1517380588453",
		"previous_sibling": "node_25_1517380390847"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@head.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @head.location[0]) ?>",
			"explanation": "loaf refers to Loaf of Bread, bread rhymes with head",
			"translation": "loaf"
		},
		"created": "2018-01-31T06:15:07.284Z",
		"updated": "2018-01-31T21:33:01.131Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@head",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_17_1517379306855",
		"previous_sibling": "node_13_1517360979166"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@heart.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @heart.location[0]) ?>",
			"explanation": "strawberry refers to Strawberry Tart, tart rhymes with heart",
			"translation": "strawberry"
		},
		"created": "2018-01-31T06:39:39.365Z",
		"updated": "2018-01-31T21:33:40.511Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@heart",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_28_1517380779180",
		"previous_sibling": "node_27_1517380588453"
	}, {
		"type": "standard",
		"title": "Greeting response",
		"output": {
			"text": {
				"values": ["Hi, nice to meet you....you can ask me to speak cockney by typing an expression, e.g. something like \"call me on the phone\". Afterwards you can ask me to explain."],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": null,
		"created": "2018-01-30T06:48:47.638Z",
		"updated": "2018-01-31T06:10:47.094Z",
		"metadata": {},
		"next_step": null,
		"conditions": "#greetings",
		"description": null,
		"dialog_node": "node_1_1517294927460",
		"previous_sibling": "Welcome"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@socks.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @socks.location[0]) ?>",
			"explanation": "bombay's refers to Bombay Docks, docks rhymes with socks",
			"translation": "bombay's"
		},
		"created": "2018-01-31T07:17:27.860Z",
		"updated": "2018-01-31T21:34:04.934Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@socks",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_4_1517383047700",
		"previous_sibling": "node_3_1517382942576"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@lies.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @lies.location[0]) ?>",
			"explanation": "porkies refers to Pork Pies, pies rhymes with lies",
			"translation": "porkies"
		},
		"created": "2018-01-30T23:52:35.945Z",
		"updated": "2018-01-31T21:32:28.741Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@lies",
		"description": null,
		"dialog_node": "node_8_1517356355736",
		"previous_sibling": "node_2_1517353337489"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@tonic.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @tonic.location[0]) ?>",
			"explanation": "phil refers to Philharmonic, which rhymes with tonic",
			"translation": "phil"
		},
		"created": "2018-01-31T07:10:52.414Z",
		"updated": "2018-01-31T21:33:52.011Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@tonic",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_1_1517382652215",
		"previous_sibling": "node_31_1517381055362"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@engineer.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @engineer.location[0]) ?>",
			"explanation": "ginger refers to Ginger Bear, bear rhymes with engineer",
			"translation": "ginger"
		},
		"created": "2018-01-31T06:25:07.043Z",
		"updated": "2018-01-31T21:33:14.536Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@engineer",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_20_1517379906855",
		"previous_sibling": "node_19_1517379777711"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@skint.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @skint.location[0]) ?>",
			"explanation": "polo'd refers to Polo Mint, mint rhymes with skint",
			"translation": "polo'd"
		},
		"created": "2018-01-31T07:15:42.954Z",
		"updated": "2018-01-31T21:34:01.079Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@skint",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_3_1517382942576",
		"previous_sibling": "node_2_1517382788874"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@stairs.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @stairs.location[0]) ?>",
			"explanation": "pairs rhymes with stairs",
			"translation": "apple & pairs"
		},
		"created": "2018-01-30T23:02:17.670Z",
		"updated": "2018-01-31T21:31:52.236Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@stairs",
		"description": null,
		"dialog_node": "node_2_1517353337489",
		"previous_sibling": "node_1_1517294927460"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@telephone.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @telephone.location[0]) ?>",
			"explanation": "bone rhymes with phone",
			"translation": "dog & bone"
		},
		"created": "2018-01-30T23:30:31.437Z",
		"updated": "2018-01-31T21:32:33.508Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@telephone",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_3_1517355031257",
		"previous_sibling": "node_8_1517356355736"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@face.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @face.location[0]) ?>",
			"explanation": "Boat refers to Boat Race, race rhymes with face",
			"translation": "boat"
		},
		"created": "2018-01-31T06:30:55.284Z",
		"updated": "2018-01-31T21:33:24.081Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@face",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_23_1517380255100",
		"previous_sibling": "node_21_1517380025420"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@rain.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @rain.location[0]) ?>",
			"explanation": "pleasure refers to Pleasure and Pain, pain rhymes with rain",
			"translation": "pleasure"
		},
		"created": "2018-01-31T07:13:09.094Z",
		"updated": "2018-01-31T21:33:56.952Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@rain",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_2_1517382788874",
		"previous_sibling": "node_1_1517382652215"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@jeans.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @jeans.location[0]) ?>",
			"explanation": "steves refers to Steve McQueens, McQueens rhymes with jeans",
			"translation": "steves"
		},
		"created": "2018-01-31T06:40:54.121Z",
		"updated": "2018-01-31T21:33:44.186Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@jeans",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_29_1517380853909",
		"previous_sibling": "node_28_1517380779180"
	}, {
		"type": "standard",
		"title": null,
		"output": {
			"text": {
				"values": ["$start_text $translation $end_text"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": {
			"end_text": "<? input.text.substring(@wife.location[1], input.text.length()) ?>",
			"start_text": "<? input.text.substring(0, @wife.location[0]) ?>",
			"explanation": "strife rhymes with wife",
			"translation": "trouble & strife"
		},
		"created": "2018-01-31T00:57:00.094Z",
		"updated": "2018-01-31T21:32:38.867Z",
		"metadata": {},
		"next_step": null,
		"conditions": "@wife",
		"digress_in": "does_not_return",
		"description": null,
		"dialog_node": "node_9_1517360219036",
		"previous_sibling": "node_3_1517355031257"
	}, {
		"type": "standard",
		"title": "Explanation",
		"output": {
			"text": {
				"values": ["$explanation"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": null,
		"created": "2018-01-30T23:43:06.316Z",
		"updated": "2018-01-30T23:51:24.297Z",
		"metadata": {},
		"next_step": null,
		"conditions": "#explain",
		"description": null,
		"dialog_node": "node_4_1517355785933",
		"previous_sibling": "node_4_1517383047700"
	}, {
		"type": "standard",
		"title": "Welcome",
		"output": {
			"text": {
				"values": ["Hello. How can I help you?"],
				"selection_policy": "sequential"
			}
		},
		"parent": null,
		"context": null,
		"created": "2018-01-30T06:40:22.899Z",
		"updated": "2018-01-30T06:44:02.133Z",
		"metadata": {},
		"next_step": null,
		"conditions": "welcome",
		"description": null,
		"dialog_node": "Welcome",
		"previous_sibling": null
	}],
	"workspace_id": "d17756e8-64c2-48db-b536-6a730a5aae96",
	"counterexamples": [],
	"learning_opt_out": false
}